# -*- coding: utf-8 -*-
"""Copia de D2 Introducción a Tests Estadísticos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13cK_KQNnV0nwhRA_MbJBWQtIREJ7X34Z
"""

import pandas as pd 
tmdb = pd.read_csv("tmdb_5000_movies.csv")

tmdb.head(2)

tmdb.describe()

import seaborn as sns

ax = sns.distplot(tmdb.vote_average,
             kde = False,
             norm_hist = False)
ax.set(xlabel = "Nota Promedio", ylabel = "frecuencia")
ax.set_title("Grafico de distibución del Promedio de notas de TMDB")

sns.boxplot(tmdb.vote_average)

tmdb_10_o_mas_votos = tmdb.query("vote_count >= 10")
tmdb_10_o_mas_votos.describe()

ax = sns.distplot(tmdb_10_o_mas_votos.vote_average)
ax.set(xlabel = "Nota Promedio", ylabel = "densidad")
ax.set_title("Grafico de distibución del Promedio de notas de TMDB")

ax = sns.distplot(tmdb_10_o_mas_votos.vote_average,
             kde = False,
             norm_hist = False)
ax.set(xlabel = "Nota Promedio", ylabel = "frecuencia")
ax.set_title("Grafico de distibución del Promedio de notas de TMDB")

ax = sns.distplot(tmdb_10_o_mas_votos.vote_average)
ax.set(xlabel = "Nota Promedio", ylabel = "frecuencia")
ax.set_title("Grafico de distibución del Promedio de notas de TMDB")

ax = sns.boxplot(tmdb_10_o_mas_votos.vote_average)
ax.set(xlabel = "Nota Promedio")
ax.set_title("Grafico de distibución del Promedio de notas de TMDB")

notas = pd.read_csv("ratings.csv")
notas.head()

nota_promedio_por_pelicula = notas.groupby("movieId").mean()["rating"]
nota_promedio_por_pelicula.head()

sns.distplot(nota_promedio_por_pelicula.values)

cantidad_votos_por_pelicula = notas.groupby("movieId").count()
cantidad_votos_por_pelicula.head()

peliculas_10_o_mas_votos = cantidad_votos_por_pelicula.query("rating >= 10").index

peliculas_10_o_mas_votos

nota_promedio_por_pelicula_10_o_mas_votos = nota_promedio_por_pelicula.loc[peliculas_10_o_mas_votos.values]
nota_promedio_por_pelicula_10_o_mas_votos.head()

ax = sns.distplot(nota_promedio_por_pelicula_10_o_mas_votos.values)
ax.set(xlabel = "Nota Promedio", ylabel = "densidad")
ax.set_title("Grafico de distibución del Promedio de notas de Movielens")

ax = sns.distplot(nota_promedio_por_pelicula_10_o_mas_votos.values,
                   kde = False,
             norm_hist = False)
ax.set(xlabel = "Nota Promedio", ylabel = "densidad")
ax.set_title("Grafico de distibución del Promedio de notas de Movielens")

ax = sns.boxplot(nota_promedio_por_pelicula_10_o_mas_votos.values)
ax.set(xlabel = "Nota Promedio")
ax.set_title("Grafico de distibución del Promedio de notas de Movielens")

ax = sns.distplot(nota_promedio_por_pelicula_10_o_mas_votos.values,
                  hist_kws = {"cumulative":True},
                  kde_kws = {"cumulative":True})
ax.set(xlabel = "Nota Promedio", ylabel = "% Acumulado")
ax.set_title("Grafico de distibución del Promedio de notas de Movielens")

ax = sns.distplot(tmdb_10_o_mas_votos.vote_average,
                  hist_kws = {"cumulative":True},
                  kde_kws = {"cumulative":True})
ax.set(xlabel = "Nota Promedio", ylabel = "% Acumulado")
ax.set_title("Grafico de distibución del Promedio de notas de TMDB")

"""#Analizando otras variables"""

ax = sns.distplot(tmdb_10_o_mas_votos.vote_count)
ax.set(xlabel = "Cantidad de Votos", ylabel = "frecuencia")
ax.set_title("Grafico de distibución de la cantidad de votos de TMDB")

ax = sns.distplot(tmdb.query("budget > 0").budget)
ax.set(xlabel = "Presupuesto de las películas", ylabel = "frecuencia")
ax.set_title("Gráfico de distibución del presupuesto de las películas de TMDB")

ax = sns.distplot(tmdb.popularity)
ax.set(xlabel = "Popularidad de las películas", ylabel = "frecuencia")
ax.set_title("Gráfico de distibución de la popularidad de las películas de TMDB")

ax = sns.distplot(tmdb.query("runtime > 0").runtime.dropna())
ax.set(xlabel = "Duración de las películas", ylabel = "frecuencia")
ax.set_title("Gráfico de distibución de la duración de las películas de TMDB")

ax = sns.distplot(tmdb.query("runtime > 0").runtime.dropna(),
                  hist_kws = {"cumulative":True},
                  kde_kws = {"cumulative":True})
ax.set(xlabel = "Duración", ylabel = "% Acumulado")
ax.set_title("Grafico de distibución de la duración de las películas de TMDB")

tmdb.query("runtime > 0").runtime.dropna().quantile(0.8)

"""#Efecto del tamaño de la muestra"""

nota_promedio_por_pelicula_10_o_mas_votos.mean()

len(nota_promedio_por_pelicula_10_o_mas_votos)

nota_promedio_por_pelicula_10_o_mas_votos[0:5].mean()

import matplotlib.pyplot as plt


promedios = list()
for i in range(1,len(nota_promedio_por_pelicula_10_o_mas_votos)):
   promedios.append(nota_promedio_por_pelicula_10_o_mas_votos[0:i].mean()) 

promedios

plt.plot(promedios)

import matplotlib.pyplot as plt
import numpy as np

np.random.seed(75241)
temp = nota_promedio_por_pelicula_10_o_mas_votos.sample(frac=1)
promedios = list()
for i in range(1,len(temp)):
   promedios.append(temp[0:i].mean()) 

promedios

plt.plot(promedios)

"""#Analizando Tests Estadísitcos Z Test - T Test"""

nota_promedio_por_pelicula_10_o_mas_votos.mean()

from statsmodels.stats.weightstats import zconfint

zconfint(nota_promedio_por_pelicula_10_o_mas_votos)

from statsmodels.stats.weightstats import DescrStatsW

descr_notas_10_votos = DescrStatsW(nota_promedio_por_pelicula_10_o_mas_votos)
descr_notas_10_votos.tconfint_mean()

descr_notas_10_votos.zconfint_mean()

"""#Analizando una películas específica"""

#media = 3.43
#int(3.41,3.45)

peliculas = pd.read_csv("movies.csv")

peliculas.head()

notas.head()

notas1 = notas.query("movieId == 1")

notas1

ax = sns.distplot(notas1.rating)
ax.set(xlabel = "Nota Toy Story", ylabel = "densidad")
ax.set_title("Grafico de distibución de la nota de Toy Story")

ax = sns.boxplot(notas1.rating)
ax.set(xlabel = "Nota Toy Story")
ax.set_title("Grafico de distribución de notas de Toy Story")

zconfint(notas1.rating)

from statsmodels.stats.weightstats import ztest
ztest(notas1.rating,nota_promedio_por_pelicula_10_o_mas_votos)

#al rechazar nuestra hipotesis (nula) consideramos que la media de TS 
#es mayor que la media de las peliculas en general

np.random.seed(75241)
temp = notas1.sample(frac=1).rating
promedios = list()
for i in range(1,len(temp)):
   promedios.append(temp[0:i].mean()) 

promedios

plt.plot(promedios)

np.random.seed(75241)
temp = notas1.sample(frac=1).rating
promedios = list()

def calcula_test(i):
  media = temp[0:i].mean()
  stat, p = ztest(temp[0:i],value = 3.4320503405352603)
  return(i,p,media)

for i in range(2,len(temp)):
   promedios.append(calcula_test(i)) 

promedios

valores = np.array(promedios)

plt.plot(valores[:,0],valores[:,1])
plt.plot(valores[:,0],valores[:,2])
plt.hlines(y = 0.05, xmin = 2, xmax = len(temp), colors = "g", linestyles= "dashdot")